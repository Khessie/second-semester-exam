---
- name: Setup Server
  hosts: webserver

  tasks:

    - name: Installation install software-properties-common
      apt: name=software-properties-common

    - name: Add dependencies for PHP versions 
      apt:
        name:
          - apt-transport-https
          - ca-certificates
        state: present
      when: ansible_distribution == "Debian"

    - name: Add Ondrej Sury's apt key 
      apt_key:
        url: https://packages.sury.org/php/apt.gpg
        id: 15058500A0235D97F5D10063B188E2B695BD4743
        state: present
      when: ansible_distribution == "Debian"

    - name: Add Ondrej Sury's repo 
      apt_repository:
        repo: "deb https://packages.sury.org/php/ {{ ansible_distribution_release }} main"
        state: present
      register: php_ondrej_debian_repo
      when: ansible_distribution == "Debian"

    - name: Update apt caches after repo is added 
      apt: update_cache=true
      when:
        - php_ondrej_debian_repo.changed
        - ansible_distribution == "Debian"
      tags: ["skip_ansible_lint"]


    - name: Install PHP
      apt: name=php{{8.1}} state=latest

    - name: Install PHP MB
      apt: name=php{{8.1}}-mbstring state=latest

    - name: Install PHP XML
      apt: name=php-xml state=latest

    - name: Install unzip
      apt: name=unzip state=latest


    - name: install apache2 server
      apt:
        name: apache2
        state: present

    - name: install php curl
      shell: sudo apt-get install php-curl -y

    - name: Installation of PHP 8.1
      apt: name=php8.1 state=present

    - name: install lamp stack
      apt:
        pkg:
          - php8.1
          - php8.1-mysql
          - php8.1-curl
          - php8.1-cgi
          - php8.1-xsl
          - php8.1-gd
          - php8.1-mbstring
          - php8.1-zip                    
          - libapache2-mod-php
        state: present
        update_cahe: yes

    - name: Install packages 
      apt:
        pkg:
          - php8.1
          - php-xml
          - php-pgsql
          - libapache2-mod-php
          - apache2
          - git
          - zip
          - unzip
          - curl
          - php-curl
          - wget
        state: latest
        update_cache: yes
      become: yes

    - name: Set php_executable variable to a default if not defined.
      set_fact:
        php_executable: php
      when: php_executable is not defined   

    - name: Install Python3
      apt: name=python3 state=latest
    - name: Install Pip
      apt: name=pip state=latest

    - name: Install Uncomplicated Firewall
      apt: name=ufw state=present
    - name: Allow Apache
      ufw: name=WWW rule=allow
    - name: Allow Apache Full
      ufw: name='WWW Full' rule=allow
    - name: Allow OpenSSH
      ufw: name=OpenSSH rule=allow
    - name: Allow access to tcp port 22 (SSH)
      ufw: rule=allow port='22' proto=tcp
    - name: Allow access to tcp port 80 (HTTP)
      ufw: rule=allow port='80' proto=tcp
    - name: Allow access to port 443 (HTTPS)
      ufw: rule=allow port='443'
    - name: Allow access to port 853 (DNS over TLS)
      ufw: rule=allow port='853'
    - name: Allow access to port 3306 (MySQL Server)
      ufw: rule=allow port='3306'
    - name: Allow access to port 5432 (PostgreSQL Server)
      ufw: rule=allow port='5432'
    - name: Enable Uncomplicated Firewall
      ufw: state=enabled policy=allow 

    - name: Install PyMySQL Library
      pip: name=pymysql state=latest 
   
    - name: Install MySql server
      apt: 
        name: mysql-server
        state: latest

    - name: Install MySQL client
      apt: 
         name: mysql-client
         state: latest

    - name: Installing Mysql and the dependencies
      package:
       name: "{{item}}"
       state: present
       update_cache: yes
      loop:
          - mysql-server
          - mysql-client 
          - python3-mysqldb
          - libmysqlclient-dev
      become: yes

    - name: start and enable mysql service
      service:
            name: mysql
            state: started
            enabled: yes

    - name: Change the authentication plugin of MySQL root user to mysql_native_password
      command: mysql -u root -e 'UPDATE mysql.user SET plugin="mysql_native_password" WHERE user="root" AND host="localhost"'

    - name: Reload all Privileges
      command: mysql -u root -e 'FLUSH PRIVILEGES'

    - name: Set MySQL root password before installing
      debconf: name='mysql-server' question='mysql-server/root_password' value='root'  vtype='password'
      become: yes

    - name: Confirm MySQL root password before installing
      debconf: name='mysql-server' question='mysql-server/root_password_again' value='root' vtype='password'
      become: yes      

    - name: Create a database user
      mysql_user:
            name: "admin"
            password: "root"
            priv: '*.*:ALL'
            host: '%'
            state: present

    - name: Create a database
      mysql_db:
            name: "miriamefedhoma"
            state: present

    - name: Enable remote login to mysql
      lineinfile:
            path: /etc/mysql/mysql.conf.d/mysqld.cnf
            regexp: '^bind-address'
            line: 'bind-address = 0.0.0.0'
            backup: yes
      notify:
            - Restart mysql 

    - name: Get Composer installer signature.
      uri:
        url: https://composer.github.io/installer.sig
        return_content: true
      register: composer_installer_signature
      when: not composer_bin.stat.exists

    - name: Download php-composer
      get_url:
        url: https://getcomposer.org/installer
        dest: /tmp/installer
        mode: 0755
        checksum: "sha384:{{ composer_installer_signature.content }}"
      when: not composer_bin.stat.exists

    - name: Run Composer installer.
      command: >
          {{ php_executable }} composer-installer.php chdir=/tmp
      when: not composer_bin.stat.exists

    - name: Add Composer to global path
      command: >
        mv /tmp/composer.phar "/usr/local/bin/composer"  creates="/usr/local/bin/composer"
      when: not composer_bin.stat.exists

    - name: make composer executable
      file:
        path: /usr/local/bin/composer
        mode: a+x
        state: file

    - name: Obtain latest laravel code from Github
      git: >
        repo=https://github.com/f1amy/laravel-realworld-example-app.git
        dest=/var/www/myapp
        force=yes
        accept_hostkey=yes

    - name: Permission for composer Installation
      shell: sudo chmod -R 777 /var/www/myapp/

    - name: Remove default web.php from routes
      shell: sudo rm -rf /var/www/myapp/routes/web.php

    - name: Create web.php in routes
      template: src=web.php dest="/var/www/myapp/routes/web.php"


    - name: Change Permissions
      shell: sudo chown -R www-data:www-data /var/www/myapp/

    - name: Change permissions for storage
      shell: sudo chmod -R 775 /var/www/myapp/storage

    - name: Create .env file for database
      command:
        path: /var/www/myapp/.env.example 
        dest: /var/www/myapp/.env

    - name: To Change artisan file permission
      shell: chmod 777 /var/www/myapp/artisan

    - name: To generate artisan key
      shell: php /var/www/myapp/ artisan key:generate

    - name: clear cache
      shell: php /var/www/myapp/ artisan config:clear

    - name: Run migration artisan migrate
      shell: php /var/www/myapp/ artisan migrate
      ignore_errors:  true

    - name: Run migration fresh
      shell: php /var/www/myapp/ artisan migrate:fresh
      ignore_errors: true

    - name: Run migration seed
      shell: php /var/www/myapp/ artisan migrate --seed
      ignore_errors: true

    - name: Run migration refresh
      shell: php /var/www/myapp/ artisan migrate:refresh --seed
      ignore_errors: true

    - name: set server name
      replace:
        path: /etc/apache2/sites-available/myapp.conf
        owner: root
        group: root
        mode: "0644"
      become: yes

    - name: Copy the HyperText Access File to Redirect the Page to Display the public files
      copy:
        src: .htaccess
        dest: /var/www/myapp

    - name: Change the Mode of the .htaccess file so it can also be in the www-data
      file:
        path: /var/www/myapp/.htaccess
        state: file
        owner: www-data
        group: www-data
        mode: "0775"

    - name: Disable the default apache web page
      command: a2dissite 000-default.conf

    - name: Restart apache
      service:
        name: apache2
        state: restarted

    - name: create apache hosts for domain
      template: src=web.conf.j2 dest="/etc/apache2/sites-available/myapp.conf"

    - name: permission for laravel conf file
      shell: sudo chmod -R 777 /etc/apache2/sites-available/myapp.conf

    - name: Update a2ensite
      command: a2ensite myapp 

    - name: Enable the Apache rewrite module
      command:  a2enmod rewrite

      notify:
        - restart apache2
